spring.main.banner-mode=off

spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}



##########################################
#        DATA IMPORT / MIGRATIONS        #
##########################################
# A: spring.jpa.hibernate.ddl-auto options

## A.0 "validate": for production
#spring.jpa.hibernate.ddl-auto=validate

## A.1 "update": for general backend development when you expect to be making mostly additive DB schema changes
spring.jpa.hibernate.ddl-auto=update

## A.2 "create-drop": for general backend development with destructive DB schema changes
# spring.jpa.hibernate.ddl-auto=create-drop


#TODO need to figure out why this is necessary now
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
spring.jpa.properties.hibernate.id.new_generator_mappings=true
spring.jackson.serialization.INDENT_OUTPUT = true
spring.mvc.pathmatch.matching-strategy=ant_path_matcher

server.port=${OSCARS_BACKEND_WEB_PORT}
server.ssl.enabled=false
server.servlet-path=/

startup.banner=Welcome to OSCARS
startup.exit=false

# when startup.standalone is true...
# - topology is loaded from config/topology.json
# - topo.url is ignored
# - southbound to NSO is skipped and assumed successful
# - ESDB vlan syncs are skipped
startup.standalone=true


logging.config=config/logback.xml
logging.file=log/backend.log
#logging.pattern.file=%d %clr(%-5p) %clr(%-35logger{5}){cyan} - %-60msg%n
#logging.pattern.console=%d %clr(%-5p) %clr(%-35logger{5}){cyan} - %-60msg%n
#logging.level.root=WARN
#logging.level.org.hibernate.tool.hbm2ddl=OFF
#logging.level.org.springframework=ERROR
## logging.level.org.springframework.security=DEBUG
logging.level.net.es.topo.common.devel=INFO
# logging.level.net.es.oscars=DEBUG
#logging.level.org.apache.cxf.services=INFO
#logging.level.io.undertow.websockets.jsr=ERROR

# syslog.serverHostname=
# syslog.facility=Facility.USER
# syslog.severity=Severity.INFORMATIONAL

syslog.enable=false

tags.categories=config/tag-categories.json,config/tag-categories-sites.json

topo.positions-file=stack-positions.json
topo.load-from-file=false
topo.url=${TOPO_OSCARS_URL}

pss.url=https://localhost:8002
pss.profile=stub
pss.config-timeout-sec=180
pss.server-type=stub
pss.sync-from-after-legacy-dismantle=false

spring.ssl.bundle.jks.pss.truststore.location=classpath:config/oscars.jks
spring.ssl.bundle.jks.pss.truststore.password=changeit

pce.engine=yenk
#pce.engine=allpaths
pce.timeout=5

pce.long-path-ratio=0.5
pce.long-path-detour=3
pce.short-path-detour=6

# how long to keep uncommitted reservations via REST API before expunging, in sec
resv.timeout=900
resv.minimum-duration=15

# how long to keep uncommitted reservations via NSI SOAP API before expunging them, in sec
nsi.resv-timeout=300
nsi.key-store=config/nsi.jks
nsi.key-store-type=JKS
nsi.key-store-alias=oscars
nsi.key-store-password=CHANGEIT
nsi.key-password=CHANGEIT

nsi.published-endpoint-url=http://localhost:8201/services/provider
nsi.provider-nsa=urn:ogf:network:es.net:2013:nsa
nsi.allowed-requesters=urn:ogf:network:sense-rm.es.net:2013:esnet
nsi.nsa-name=ESnet NSA
nsi.nsa-contact=Evangelos Chaniotakis,haniotak@es.net
nsi.nsa-location=37.876,-122.253
nsi.strict-policing=false

nml.topo-id=urn:ogf:network:es.net:2013:
nml.topo-name=es.net

# set this to true to enable oauth for the backend and frontend alike
auth.oauth-enabled=true
# if any of the user's 'group' claims match one of those, they get the appropriate access
auth.user-groups[0]=svc_oscars_user
auth.user-groups[1]=svc_oscars_admin
auth.admin-groups[0]=svc_oscars_admin

# basically all this oauth stuff needs to be coordinated with the OAuth provider
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://keycloak-east.es.net/auth/realms/esnet_keycloak
spring.security.oauth2.client.provider.keycloak.issuer-uri=https://keycloak-east.es.net/auth/realms/esnet_keycloak
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
spring.security.oauth2.client.registration.keycloak.client-id=local-oscars-backend
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.scope=openid

# for opentelemetry
# uncomment otel.sdk.disabled to enable opentelemetry
# set correct values / use env variables for other params as needed

otel.sdk.disabled=true
#otel.service.name=oscars-backend
#otel.service.version=1.2
#otel.traces.exporter=otlp
#otel.metrics.exporter=otlp
#otel.logs.exporter=otlp
#otel.exporter.otlp.endpoint=https://eapm2.gc1.dev.stardust.es.net:8200
#otel.exporter.otlp.headers.authorization=ApiKey <APIKEY>
#otel.resource.attributes=deployment.environment=development


frontend.oauth-client-id=local-oscars-frontend
frontend.oauth-auth-endpoint=https://keycloak-east.es.net/auth/realms/esnet_keycloak/protocol/openid-connect/auth
frontend.oauth-token-endpoint=https://keycloak-east.es.net/auth/realms/esnet_keycloak/protocol/openid-connect/token
frontend.oauth-logout-endpoint=https://keycloak-east.es.net/auth/realms/esnet_keycloak/protocol/openid-connect/logout
# this redirect must match what is configured on the oauth server for that client-id
frontend.oauth-redirect-uri=http://localhost:8181/
frontend.oauth-scope=openid


nso.vc-id-range=7000:7999
nso.sdp-id-range=7000:7999
nso.sap-qos-id-range=7000:7999
nso.sdp-ids-globally-unique=true

# cflowd for VPLS endpoints: enabled disabled, not-supported
nso.cflowd=not-supported
# how many times to retry a failed NSO attempt (including the first attempt)
nso.retry-attempts=5
# when retrying, how long to wait between retries
nso.backoff-milliseconds=30000

nso.mock-live-show-commands=true
nso.routing-domain=esnet-293
nso.uri=${NSO_URI}
nso.username=${NSO_USERNAME}
nso.password=${NSO_PASSWORD}

esdb.uri=${ESDB_URI}
esdb.api-key=${ESDB_API_KEY}
esdb.enabled=true
# format this period like
# https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/time/Duration.html#parse(java.lang.CharSequence)
esdb.vlan-sync-period=PT5M
